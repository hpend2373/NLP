# IKEA MEPNet Training Configuration

# Experiment settings
exp_name: "ikea_mepnet_baseline"
exp_dir: "./experiments/ikea_mepnet_baseline"
use_wandb: false
wandb_project: "ikea-mepnet"
use_tensorboard: true

# Model configuration
model:
  # Architecture
  num_stacks: 2
  num_blocks: 1
  num_features: 256
  image_size: [512, 512]

  # Shape conditioning
  use_shape_condition: true
  shape_encoding_dim: 512
  shape_encoder_type: "pointnet"  # "pointnet" or "voxel"

  # Output heads
  num_keypoints: 16
  num_rotation_bins: 24
  use_continuous_rotation: true
  max_parts: 10
  detect_parts: true
  predict_mask: true
  predict_depth: false

  # Training
  intermediate_supervision: true

# Data configuration
data:
  root_dir: "./IKEA-Manuals-at-Work"

  dataset_args:
    load_meshes: true
    load_videos: false
    furniture_categories: ["Chair", "Table"]  # Start with subset
    max_parts_per_step: 10
    image_size: [512, 512]
    normalize_scale: true
    cache_meshes: true

  augmentation:
    # Basic augmentations
    use_crop: true
    crop_size: [480, 480]
    preserve_center: true
    use_scale: true
    scale_range: [0.8, 1.2]
    use_color_jitter: true
    brightness: 0.2
    contrast: 0.2
    saturation: 0.2
    hue: 0.1

    # Manual-specific augmentations
    use_manual_style: true
    sketch_prob: 0.3
    edge_prob: 0.2
    binarize_prob: 0.1

    # Pose augmentation
    use_pose_noise: false
    rot_noise_deg: 5.0
    trans_noise_ratio: 0.05

    # Normalization
    normalize: true

# Loss configuration
loss:
  keypoint_weight: 1.0
  rotation_weight: 1.0
  translation_weight: 1.0
  mask_weight: 0.5
  part_detection_weight: 0.5
  depth_weight: 0.3
  use_continuous_rotation: true
  intermediate_supervision: true

# Optimization configuration
optimization:
  optimizer: "adamw"  # "adam" or "adamw"
  lr: 0.0001
  weight_decay: 0.01
  scheduler: "cosine"  # "cosine" or "reduce_on_plateau"
  min_lr: 0.000001

# Training configuration
batch_size: 8
val_batch_size: 16
epochs: 100
num_workers: 4
device: "cuda"
use_multi_gpu: true
gradient_clip: 1.0

# Validation and saving
val_frequency: 1
save_frequency: 5

# Pretrained weights (optional)
# pretrained_path: "./lego_release/checkpoints/lego_pretrained.pth"

# Evaluation metrics
metrics:
  - "pose_accuracy"
  - "chamfer_distance"
  - "mask_iou"
  - "plan_accuracy"
  - "assembly_feasibility"

# Evaluation settings
save_predictions: true